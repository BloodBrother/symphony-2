 /**
 * Symphony Filtering
 */

/*-----------------------------------------------------------------------------
	LESS â€” Variables Importing
-----------------------------------------------------------------------------*/

@import "variables";

/*-----------------------------------------------------------------------------
	Filtering
-----------------------------------------------------------------------------*/

.drawer-filtering .frame {
	.flex(~'row', ~'center', ~'flex-end');
	flex-wrap: wrap;
	border: none;
	background: none;

	.frame-header {
		padding: 0;
		border: none;
	}

	ol {
		width: 100%;
		margin: 0;
	}

	&.collapsible > * > li,
	&.constructable > * > li {
		margin-left: 0;

		.content {
			padding: var(--spacing-thinnest) 0 0;
			border: none;
		}
	}

	.columns.two {
		margin: 0 0 0 ~'calc(var(--spacing-broad) * -1)'!important;

		.column {
			margin: 0!important;
			padding: 0 0 0 var(--spacing-broad)!important;
			border: none!important;
			width: 50%!important;
		}
	}

	label > * {
		margin-top: 0;
	}

	.instance {
		overflow: visible;
		padding: 0 0 var(--spacing-broad)!important;
	}

	&.duplicator {
		margin-bottom: 0;
	}

	.destructor {
		right: 0;
	}

	.clear-filters {
		order: 3;
		margin-left: var(--spacing-thinnest);
		cursor: pointer;
	}

	.apply-filters {
		order: 2;
		margin-left: var(--spacing-thinnest);
		cursor: pointer;
	}

	.apply {
		position: relative;
		right: auto;
		bottom: auto;
		margin-top: 0;
	}

	.calendar {
		padding: var(--spacing-thinner);
	}

	&.empty {
		height: auto;

		ol::before {
			content: attr(data-empty);
			display: block;
			color: var(--color-main-dark);
			font-size: var(--text-shorter);
			text-transform: uppercase;
			margin-bottom: var(--spacing-broad);
			padding-bottom: var(--spacing-broad);
		}
	}
}
