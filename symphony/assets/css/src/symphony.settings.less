/**
* Symphony Settings Forms
*
* This file contains layout specific styling rules for the
* settings-style sections (Blueprints, Data Sources, etc.) of the admin interface. 
*
* @since Symphony 4.0.0
*/

/*-----------------------------------------------------------------------------
	LESS â€” Variables Importing
-----------------------------------------------------------------------------*/

@import "variables";

/*--------------------------------------------------------------------------
	Settings
--------------------------------------------------------------------------*/

fieldset.settings {
	--standard-frame-background-color: var(--color-main-lightest);
	--standard-frame-instance-background-color: var(--color-accent-light);
	--standard-frame-instance-opened-background-color: var(--color-accent-lighter);

	padding: var(--standard-outer-rhythm);
	box-sizing: content-box;

	label {
		cursor: pointer;

		&:hover {
			input:not(:focus), select:not(:focus) {
				border-bottom-color: var(--standard-field-hover-border-color);
			}
		}
	}

	input[type=text]:not(:focus), 
	input[type=email]:not(:focus), 
	input[type=file]:not(:focus), 
	input[type=number]:not(:focus), 
	input[type=password]:not(:focus), 
	input[type=search]:not(:focus), 
	input[type=url]:not(:focus), 
	input[type=tel]:not(:focus), 
	select:not(:focus), 
	textarea:not(:focus) {
		background-color: var(--color-clear);
	}

	>*:not(legend):not(.toggle)+*,
	>div:not([class])>*+* {
		margin-top: var(--spacing-thin);
	}

	>select {
		margin-left: var(--standard-inner-rhythm);
	}

	.frame>ol>li {
		&+li {
			margin-top: var(--spacing-pico);
		}
		&.instance:not(.collapsed) {
			&:not(:first-of-type) {
				margin-top: var(--standard-inner-rhythm);
			}

			&:not(:last-of-type) {
				margin-bottom: var(--standard-inner-rhythm);
			}
		}
	}

	/* Special types of instances alterations --------*/
	.instance {
		transition-duration: var(--duration-shorter);
		
		&.collapsed:not(.ordering):not(:hover) {
			&[class*="drawer"] {
				// box-shadow: inset 0px 0px 0px 3px var(--color-main-lighter);
				background-color: var(--color-main-lighter);
				color: var(--color-main);
			}

			&[class*="tabs"] {
				// box-shadow: inset 0px 0px 0px 3px var(--color-main-lighter);
				background-color: var(--color-main);
				color: var(--color-main-lightest);
			}

			&[class*="group"] {
				// box-shadow: inset 0px 0px 0px 3px var(--color-main-lighter);
				background-color: var(--color-main-lighter);
				color: var(--color-main);
			}
		}

		// &[class*="drawer"],
		// &[class*="tabs"],
		// &[class*="group"] {
		// 	&:not(:first-child),
		// 	&+* {
		// 		margin-top: var(--spacing-micro);
		// 	}
		// }
	}

	[id="fields-duplicator"] .frame-header[title]:hover:after,
	[id="fields-duplicator"] .instance:not(.collapsed) .frame-header[title]:after
	[id="fields-duplicator"] .instance.ordering .frame-header[title]:after {
		content: '#'attr(title);
		order: -1;
		margin-right: var(--spacing-thinnest);
		color: var(--color-main-light);
		font-weight: 580;
	}


	@media (min-width: @md){
		margin-left: var(--standard-label-column-width);

		>:not(legend) {
			width: 100%;
			max-width: var(--dimension-smaller);
			margin-left: auto;
			margin-right: auto;

			&.frame {
				max-width: calc(var(--dimension-smaller) + var(--standard-outer-rhythm) * 2);
			}
		}
	}

	> legend {
		color: var(--color-main-light);

		@media (min-width: @md){
			float: left;
			margin-left: calc(-1 * var(--standard-label-column-width));
			width: var(--standard-label-column-width);
		}

		@media (max-width: (@md - 1)){
			font-size: var(--text-big);
			margin-top: var(--standard-outer-rhythm);
		}
	}

	.apply {
		margin-top: var(--standard-inner-rhythm);
		padding: var(--standard-inner-rhythm) 0;
		position: sticky;
		bottom: 0;
		background-color: var(--standard-frame-background-color);
		z-index: 2;
	}

	span.frame {
		margin: 0;

		& + span.frame {
			margin-top: var(--spacing-thinnest);
		}

		& + p.help {
			margin-top: var(--spacing-micro);
		}
	}

	> p a {
		color: var(--color-accent);

		&:hover {
			color: currentColor;
		}
	}

	select {
		width: 100%;
	}

	p.help {
		a {
			border-bottom: 1px solid currentColor;

			&:hover {
				border-color: transparent;
			}
		}
	}

	input + p.help,
	select + p.help {
		margin-top: 1rem;
	}

	.toggle {
		position: absolute;
		line-height: 1.8em;
		margin: 3rem 0 0 -17rem;
		left: var(--spacing-thinner);
		width: 17rem;

		@media (max-width: (@md - 1)){
			position: relative;
			font-size: var(--text-small);
			margin: 0;
			margin-bottom: var(--spacing-thin);
			width: auto;
		}
	}

	li .label {
		margin: 1rem 0 1.25rem;
	}



	&.condensed {
		label:last-of-type {
			margin-bottom: 0;
		}
	}

	& .column:last-of-type, & > label:last-of-type, &.label:last-of-type {
		margin-bottom: 0;
	}

	&:last-of-type {
		margin-bottom: 0;
	}

	.columns {
		margin-bottom: calc(-1 * var(--standard-inner-rhythm));

		.column {
			margin-bottom: var(--standard-inner-rhythm);
		}
	}

	.group, .column {
		label+label {
			margin-top: var(--standard-inner-rhythm);
		}
	}

	/* Initial states to prevent interface jank --------*/
	.frame {
		>ol>:not(.instance) {
			* {
				color: transparent;
			}
	
			>.frame-header {
				cursor: wait;
			}
	
			>.frame-header~*,
			&.template {
				position: absolute;
				visibility: hidden;
				opacity: 0;
				pointer-events: none;
			}
		}
	}
}

