/**
 * Frames are used in different areas of the system to group content,
 * e. g. in the section or data source editor.
 *
 * @since: Symphony 2.3
 */

.frame {
	/* Graphical styles --------*/
	border-radius: var(--standard-frame-border-radius);
	background-color: var(--standard-frame-background-color);

	/* Relative context for children --------*/
	position: relative;
	box-sizing: border-box;

	h1 {
		padding: var(--spacing-thinnest);
		color: var(--color-main);
		font-size: inherit;
		font-weight: normal;
		line-height: inherit;
		background-color: var(--color-main-lighter);
		border-radius: var(--radius-current);
	}

	a {
		color: currentColor;

		&:hover {
			color: var(--color-accent);
		}
	}

	> button + button {
		margin-left: var(--spacing-micro);
	}

	/* Graphical styles for items â€” 
		Generic structure selector; selectable without JS added classes --------*/
	>ol {
		>li {
			background-color: var(--standard-frame-instance-background-color);
			border-radius: var(--standard-frame-border-radius);
			transition-duration: var(--duration-shortest);

			/* Headers */
			>header {
				display: flex;
				align-items: baseline;
				position: relative;
				border: 1px solid transparent;

				h4 {
					padding-top: var(--standard-inner-rhythm);
					padding-bottom: var(--standard-inner-rhythm);
					display: flex;
					align-items: baseline;
					flex-grow: 1;
					
					strong {
						font-weight: 580;
					}

					span, & + span {
						font-size: var(--text-small);
						padding-left: var(--spacing-thinnest);
					}

					.type {
						order: 2;
						margin-left: auto;
						margin-right: var(--spacing-thin);
					}

					svg {
						padding-left: var(--spacing-thinner);

						* {
							transition-duration: var(--duration-shorter);
						}
					}

					.required {
						color: var(--color-main);
					}
				}

				:not(.collapsed)>& {
					border-top-color: transparent;
				}

				&:hover {
					color: var(--color-accent);
				}

				&.sidebar:before {
					border-right-color: var(--color-main-light);
					border-left-color: var(--color-main-lighter);
				}
			}
		}
	}

	/* Inline frames (legacy) --------*/
	span&,
	fieldset&,
	&.inline {
		display: block;
		margin-bottom: var(--spacing-thin);
		padding: var(--spacing-thinnest);
	}

	/* Controls --------*/
	.destructor,
	.debug {
		color: inherit;
		font-size: var(--standard-button-font-size);
		margin: 0 var(--standard-inner-rhythm);
	}

	.destructor {
		margin-left: auto;
	}

	.disabled {
		opacity: 0.5;
		cursor: not-allowed;
	}

	/* Actions --------*/
	.actions {
		margin: 0 0 var(--spacing-thinnest);
		
		input {
			margin-top: 0;
		}

		button {
			float: right;
		}
	}

	/* Orderables and Selectables --------*/
	.selected,
	.ordering {
		position: relative;
		box-shadow: var(--shadow);
	}

	.ordering .frame-header span,
	.ordering .frame-header .destructor,
	.ordering .content i,
	.ordering ul.tags {
		color: var(--color-main-lighter);
	}
}

/* Collapsibles --------*/
.constructable > * > li,
.collapsible > * > li {
	position: relative;
	width: 100%;

	fieldset.settings & .content {
		padding: var(--standard-outer-rhythm);

		>*:not([type="hidden"])+*,
		>div:not(.columns)>*+* {
			margin-top: var(--spacing-thin);
		}
	}
}

/* DIRTY FIX for symphony.collapsible.js bad style setting behavior --------*/
.collapsible .instance {
	max-height: initial !important;
}

/* Collapsible behaviors --------*/
.collapsible .collapsed>header+* {
	display: none;
}

.collapsible .instance.collapsed {
	overflow: hidden;

	&:hover {
		z-index: 2;
		border-color: var(--color-ui);

		&:not(.ordering) {
			background-color: var(--color-clear);
		}
	}

	&:not(:hover)+.collapsed:not(:hover) {
		border-top-color: var(--color-ui);
	}

}

.collapsible legend {
	padding-right: 0.5rem;
}

.collapsible .js-animate {
	overflow: hidden;
}

.collapsible .field-publishnotes {
	margin-top: 0;
}


/* Orderable behaviors --------*/
.orderable .instance.collapsed .frame-header {
	cursor: s-resize;
}


.orderable .instance:not(.collapsed) .frame-header {
	cursor: n-resize;
}

.orderable .instance.ordering .frame-header {
	cursor: move;
	cursor: grab;
	cursor: -moz-grab;
	cursor: -webkit-grab;
}

.orderable .ordering {
	box-shadow: 0px 0px 0px 3px var(--color-accent),
					0px 0px 1px 4px var(--color-accent-light);
	--standard-field-border-color: transparent;
	z-index: 1;
	color: var(--color-accent);

	&.instance {
		background-color: var(--color-clear);
	}
}

.orderable .is-ordering .instance {
	transition: none;
	&:not(.ordering) {
		pointer-events: none;
	}
}

.frame .js-animate {
	overflow: hidden;
}

/* States --------*/
.conflict {
	.frame-header {
		color: var(--color-error);
	}
}

/* Initial states to prevent interface jank --------*/
html:not(.js-active) {
	.frame {
		* {
			color: transparent;
		}
		.frame-header {
			cursor: wait;
		}
		.frame-header~*, .template,
		>ol>li>header~* {
			position: absolute;
			visibility: hidden;
			opacity: 0;
			pointer-events: none;
		}
	}
}